stages:
  - build
  - deploy
  - fat_build
  - fat_deploy


###################################################
# Nightly Builds
###################################################

Nightly Debian 32:
  stage: build
  script:
    - mkdir build; cd build; cmake ..; make package
    - cp *.deb /artifacts/nightly/
  only:
    - qaul-ng
  tags:
    - debian8_32

Nightly Debian 64:
  stage: build
  script:
    - mkdir build; cd build; cmake ..; make package
    - cp *.deb /artifacts/nightly/
  only:
    - qaul-ng
  tags:
    - debian8_64

Nightly Copy OSX 10.6:
  stage: build
  script:
    - mkdir build; cd build; cmake ..; make
    - ./make_dmg.sh
    - qaulcopynightly
  only:
    - qaul-ng
  tags:
    - osx_10.6

Nightly Copy Android:
  stage: build
  script:
    - PATH="$PATH:$ANDROID_SDK"
    - mkdir build; cd build
    - cmake ../ -DPORT=ANDROID -DNDK_ROOT=$ANDROID_NDK -DEXTRALIB_PATH=$ANDROID_LIBRARIES -DANDROID_EABI=$ANDROID_EABI
    - make
    - cp android/app/src/main/bin/QaulActivity-debug.apk /artifacts/nightly/
  only:
    - qaul-ng
  tags:
    - android

Nightly Copy Windows:
  stage: build
  script:
    - PATH="/mingw32/bin:$PATH"; declare -x MSYSTEM="MINGW32"; declare -x MSYSCON="mintty.exe"
    - mkdir build; cd build; cmake .. -G "MSYS Makefiles" -DGUI=NATIVE; make
    - cd src/client/win; mkdir build; cd build; cmake ..
    - cmake --build . --target qaul --config Debug
    - cpack -C Debug
    - cp *.exe //VBOXSVR/artifacts/nightly/
  only:
    - qaul-ng
  tags:
    - windows

Nightly Deploy:
  stage: deploy
  script:
    - qaulnightlydeploy $CI_BUILD_REF
  only:
    - qaul-ng
  tags:
    - buildserver


###################################################
# Test Builds
###################################################

Debian 8 64-bit:
  stage: build
  script:
    - mkdir build; cd build; cmake ..; make package VERBOSE=1
  except:
    - master
    - qaul-ng
    - MostlyBroken
  tags:
    - debian8_64

Debian 8 32-bit:
  stage: build
  script:
    - mkdir build; cd build; cmake ..; make package VERBOSE=1
  except:
    - master
    - qaul-ng
    - MostlyBroken
  tags:
    - debian8_32

OSX 10.6:
  stage: build
  script:
    - mkdir build; cd build; cmake ..; make VERBOSE=1
    - ./make_dmg.sh
  except:
    - master
    - qaul-ng
    - MostlyBroken
  tags:
    - osx_10.6

Android:
  stage: build
  script:
    - PATH="$PATH:$ANDROID_SDK"
    - mkdir build; cd build
    - cmake ../ -DPORT=ANDROID -DNDK_ROOT=$ANDROID_NDK -DEXTRALIB_PATH=$ANDROID_LIBRARIES -DANDROID_EABI=$ANDROID_EABI
    - make VERBOSE=1
  except:
    - master
    - qaul-ng
    - MostlyBroken
  tags:
    - android

Windows:
  stage: build
  script:
    - PATH="/mingw32/bin:$PATH"; declare -x MSYSTEM="MINGW32"; declare -x MSYSCON="mintty.exe"
    - mkdir build; cd build; cmake .. -G "MSYS Makefiles" -DGUI=NATIVE; make VERBOSE=1
    - cd src/client/win; mkdir build; cd build; cmake ..
    - cmake --build . --target qaul --config Release
    - cpack -C Release
  except:
    - master
    - qaul-ng
    - MostlyBroken
  tags:
    - windows

###################################################
# MostlyBroken Builds
# Experimental repositories, inofficial keys
###################################################

MostlyBroken Android:
  stage: build
  cache:
    paths:
        - archives/
  script:
    - mkdir build; cd build
    - cmake .. -DPORT=ANDROID -DQAUL_ANDROID_VERSION_NAME="1.0b5.${CI_PIPELINE_ID}" -DQAUL_ANDROID_VERSION_CODE=${CI_PIPELINE_ID} -DSDK_ROOT=/home/saces/android-sdk -DNDK_ROOT=/home/saces/android-sdk/ndk-bundle -DEXTRALIB_PATH=/home/saces/qaul-extralib
    - make
    - cp android/app/src/main/bin/QaulActivity-debug.apk ~/experimental/fdroid/repo/QaulActivity-debug_${CI_PIPELINE_ID}.apk
  only:
    - MostlyBroken
  tags:
    - android
    - MostlyBroken

MostlyBroken Android deploy:
  stage: deploy
  script:
    - cd ~/experimental/fdroid
    - fdroid update
    - ~/bin/android.sh
  only:
    - MostlyBroken
  tags:
    - android
    - MostlyBroken

MostlyBroken Ubuntu 16.04 64bit:
  stage: build
  cache:
    paths:
        - archives/
  script:
    - mkdir build; cd build; cmake .. -DQAUL_ANDROID_VERSION_CODE=${CI_PIPELINE_ID}; make package
    - cp *.deb ~/experimental/ubuntu-raw
  only:
    - MostlyBroken
  tags:
    - debian
    - MostlyBroken

MostlyBroken Ubuntu deploy:
  stage: deploy
  script:
    - ~/bin/ubuntu.sh
  only:
    - MostlyBroken
  tags:
    - debian
    - MostlyBroken

